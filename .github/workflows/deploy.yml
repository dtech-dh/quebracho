name: 🚀 Deploy Quebracho

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ==============================
      # 📦 Checkout del código
      # ==============================
      - name: Checkout code
        uses: actions/checkout@v4

      # ==============================
      # ✅ Validar secrets
      # ==============================
      - name: ✅ Validar secrets del repositorio
        run: |
          missing=0
          check_secret() {
            if [ -z "$1" ]; then
              echo "❌ Falta $2"
              missing=1
            fi
          }

          check_secret "${{ secrets.DOCKER_HUB_USER }}" "DOCKER_HUB_USER"
          check_secret "${{ secrets.DOCKER_HUB_TOKEN }}" "DOCKER_HUB_TOKEN"
          check_secret "${{ secrets.DO_HOST }}" "DO_HOST"
          check_secret "${{ secrets.DO_USER }}" "DO_USER"
          check_secret "${{ secrets.DO_SSH_KEY }}" "DO_SSH_KEY"
          check_secret "${{ secrets.GH_PAT }}" "GH_PAT"
          check_secret "${{ secrets.DOTENV }}" "DOTENV"

          if [ $missing -ne 0 ]; then
            echo "❌ Faltan variables obligatorias, abortando workflow."
            exit 1
          fi
          echo "✅ Todos los secrets requeridos están definidos correctamente."


      # ==============================
      # 🔑 Login en Docker Hub
      # ==============================
      - name: Log in en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # ==============================
      # 🐳 Build & Push backend
      # ==============================
      # 🔧 Configurar builder BuildKit
      - name: Configurar builder BuildKit
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:rootless

      # 🐳 Build & Push backend
      - name: Build & Push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER }}/quebracho-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 🐳 Build & Push frontend
      - name: Build & Push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER }}/quebracho-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max


      # ==============================
      # 🚀 Deploy remoto al Droplet
      # ==============================
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            set -e
            echo "🚀 Iniciando deploy en $HOSTNAME..."

            mkdir -p /srv/quebracho

            if [ ! -d "/srv/quebracho/.git" ]; then
              echo "📥 Clonando repo por primera vez..."
              rm -rf /srv/quebracho
              git clone https://oauth2:${{ secrets.GH_PAT }}@github.com/dtech-dh/quebracho.git /srv/quebracho
            else
              echo "🔄 Actualizando repo existente..."
              cd /srv/quebracho
              git reset --hard
              git pull https://oauth2:${{ secrets.GH_PAT }}@github.com/dtech-dh/quebracho.git main
            fi

            echo "🧩 Generando .env..."
            echo "${{ secrets.DOTENV }}" > /srv/quebracho/.env
            echo "${{ secrets.DOTENV }}" > /srv/quebracho/backend/src/.env
            echo "${{ secrets.DOTENV }}" > /srv/quebracho/frontend/src/.env

            cd /srv/quebracho

            echo "🐳 Actualizando imágenes desde Docker Hub..."
            docker compose pull

            echo "⚙️ Levantando contenedores..."
            docker compose up -d --build

            echo "✅ Estado final:"
            docker compose ps
            docker system prune -f
