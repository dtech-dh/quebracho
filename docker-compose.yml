
services:
  db:
    image: postgres:16-alpine
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

#  etl:
#    build: .
#    container_name: mcp-pg-etl
#    command: ["python", "etl.py"]
#    depends_on:
#      db:
#        condition: service_healthy
#    env_file: [.env]

  api:
    build: ./backend
    container_name: mcp-backend
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - TABLE_NAME=${TABLE_NAME}
    depends_on:
      - db
    env_file: [.env]
    ports:
      - "8000:8000"

  ui:
    build: ./frontend
    container_name: mcp-frontend
    environment:
      - API_URL=http://api:8000
    ports:
      - "8001:8501"
    env_file: [.env]

volumes:
  pgdata:


